var ApiInterceptor=function($q,$window,$injector){return{request:function(config){var api=$injector.get("api"),url=config.url.split("/");return api.isLoggedIn()&&(url[1]=="api"||url[0]=="api")&&(config.headers.Authorization="Bearer "+api.getLoginToken()),config},responseError:function(rejection){if(rejection.status===401){var api=$injector.get("api");api.logOff()}else return $q.reject(rejection)}}};const ApiService=function($http,$window,$rootScope,$httpParamSerializer,$state,$q,$timeout){function _get(url,parameters){return(parameters===null||parameters===undefined)&&(parameters={}),$http.get(url,{params:parameters})}function _post(url,data){return(data===null||data===undefined)&&(data={}),$http.post(url,data,{})}function onAuthChanged(){$timeout(function(){$rootScope.$broadcast("auth-changed");console.log("AUTH CHANGE BOOM")})}function getToken(){return $window.localStorage.getItem(token_key)}function saveToken(token){$window.localStorage.setItem(token_key,token)}const self=this,token_key="auth_token";var auth_info=null;auth_info=$window.localStorage.getItem(token_key);this.isLoggedIn=function(){return getToken()!=undefined};this.getLoginToken=function(){return getToken()};this.logOff=function(){self.isLoggedIn&&($window.localStorage.removeItem(token_key),auth_info=null,onAuthChanged(),$state.go("login"))};this.logIn=function(email,password){return $http.post("api/login",{email:email,password:password}).then(function(response){return response.data!=null&&(saveToken(response.data),onAuthChanged()),response})};this.postRegister=function(login){return _post("/api/login/register",login)};this.getAppointments=function(start,end,employeeId){return _get("/api/appointment",{start:start,end:end,employeeId:employeeId})};this.getEmployees=function(){return _get("/api/appointment/employee")}},DateFormatFilter=function($filter){return function(date,format,timezone){return(timezone===null||timezone===undefined)&&(timezone="UTC"),$filter("date")(date,format,timezone)}},HomeComponent={templateUrl:"/app/home/home.component.html",controller:function(){}},AdminRegisterComponent={templateUrl:"/app/admin/admin-register.component.html",controller:function($state,api){let $ctrl=this;$ctrl.login=null;$ctrl.submit=function(){$ctrl.form.$valid&&($ctrl.form.$submitted=!0,api.postRegister($ctrl.login).then(function(){alert("User has been added");$ctrl.login=null},function(){alert("Error adding user. Make sure user doesnt exist and passwords match")}))}}},AdminComponent={templateUrl:"/app/admin/admin.component.html",controller:function(){let $ctrl=this}},AppointmentComponent={templateUrl:"/app/appointment/appointment.component.html",controller:function(api){function getAppointments(){var start=moment($ctrl.date).startOf("day").toDate(),end=moment($ctrl.date).endOf("day").toDate();api.getAppointments(start,end,$ctrl.employee).then(function(response){$ctrl.appointments=response.data})}let $ctrl=this;$ctrl.date=moment().startOf("day").toDate();$ctrl.employee=null;$ctrl.appointments=[];$ctrl.employees=[];$ctrl.$onInit=function(){getAppointments();api.getEmployees().then(function(response){$ctrl.employees=response.data;$ctrl.employee=$ctrl.employees[0].empId;getAppointments()})};$ctrl.submit=function(){getAppointments()}}},LoginComponent={templateUrl:"/app/login/login.component.html",controller:function($state,api){let $ctrl=this;$ctrl.year=moment().year();$ctrl.model={};$ctrl.onSubmit=function(){api.logIn($ctrl.model.email,$ctrl.model.password).then(function(response){response.data.success==!1?$ctrl.error=!0:$state.go("appointment")},function(){})}}},NavbarComponent={templateUrl:"/app/navbar/navbar.component.html",controller:function($rootScope,$state,$transitions,api){var $ctrl=this;$ctrl.logged_in=api.isLoggedIn();$ctrl.user=null;$ctrl.$onInit=function(){$rootScope.$on("auth-changed",function(){$ctrl.logged_in=api.isLoggedIn()});$transitions.onSuccess({},function(transition){var to=transition.to(),params=transition.params()})};$ctrl.onLogin=function(){$state.go("login")};$ctrl.onLogout=function(){api.logOff()};$ctrl.submit=function(){$state.go("subreddit",{name:$ctrl.subredditName});$ctrl.subredditName=null}}};(function(){"use strict";function convertDateStringsToDates(input){var key,value,date;if(typeof input!="object")return input;for(key in input)input.hasOwnProperty(key)&&(value=input[key],date=moment.utc(value,moment.ISO_8601),typeof value=="string"&&date.isValid()?input[key]=date.toDate():typeof value=="object"&&convertDateStringsToDates(value))}var app=angular.module("app",["ngAnimate","ngMessages","ngSanitize","ui.router","angularMoment","tlmd.paginator"]);app.service("api",ApiService);app.filter("dateformat",DateFormatFilter);app.component("appNavbar",NavbarComponent);app.component("appAdmin",AdminComponent);app.component("appAdminRegister",AdminRegisterComponent);app.component("appAppointment",AppointmentComponent);app.component("appHome",HomeComponent);app.component("appLogin",LoginComponent);app.config(function($locationProvider,$urlRouterProvider,$stateProvider,$httpProvider){$locationProvider.html5Mode(!0);$urlRouterProvider.otherwise("/appointments");$stateProvider.state("login",{url:"/login",component:"appLogin"}).state("appointment",{url:"/appointments",component:"appAppointment"}).state("admin-register",{url:"/admin/register",component:"appAdminRegister"});$httpProvider.interceptors.push(ApiInterceptor);$httpProvider.defaults.transformResponse.push(function(responseData){return convertDateStringsToDates(responseData),responseData});$httpProvider.defaults.transformResponse.push(function(responseData){return convertDateStringsToDates(responseData),responseData})})})();